// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement()) // PK
  // kakao(k-XXXX), google(g-XXXX), apple(a-XXXX)
  account String  @unique
  name    String?

  intro           String?
  profileImageURL String?
  role Role @default(USER)
  TravelNote TravelNote[]
}

enum Role {
  USER
  ADMIN
}

// 여행
model TravelNote {
  id        Int    @id @default(autoincrement()) // PK
  startDate String // 여행 시작일
  endDate   String // 여행 종료일

  title     String // 제목
  review    String?  @db.VarChar(280) // 여행기
  createdAt DateTime @default(now()) // 생성일
  updatedAt DateTime @updatedAt // 수정일

  city     City?   @relation(fields: [cityId], references: [id])
  cityId   Int?
  cityName String? @db.VarChar(20)

  images TravelImage[]
  User   User?         @relation(fields: [userId], references: [id])
  userId Int?
}

// 여행 이미지
model TravelImage {
  id           Int        @id @default(autoincrement()) // PK
  sequence     Int // 이미지 순서
  isMain       Boolean    @default(false) // 대표 이미지 여부
  url          String // 이미지 URL
  key          String? // 이미지 Key
  createdAt    DateTime   @default(now()) // 생성일
  travel       TravelNote @relation(fields: [travelNoteId], references: [id], onDelete: Cascade)
  travelNoteId Int // 참조키
}

model Country {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  name      String   @unique
  continent String? // 대륙
  createdAt DateTime @default(now()) // 생성일
  updatedAt DateTime @updatedAt // 수정일
  City      City[]
}

model City {
  id          Int          @id @default(autoincrement()) // PK
  name        String
  country     Country      @relation(fields: [countryCode], references: [code])
  countryCode String // 참조키
  latitude    String?
  longitude   String?
  createdAt   DateTime     @default(now()) // 생성일
  updatedAt   DateTime     @updatedAt // 수정일
  TravelNote  TravelNote[]
  Magnet      Magnet[]
}

model Magnet {
  id        Int      @id @default(autoincrement()) // PK
  url       String   @unique
  city      City     @relation(fields: [cityId], references: [id], onDelete: Cascade)
  cityId    Int
  createdAt DateTime @default(now()) // 생성일
  updatedAt DateTime @updatedAt // 수정일
}
